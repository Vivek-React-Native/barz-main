{
  "name": "@barz/server",
  "version": "0.0.6",
  "type": "module",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "node --max_old_space_size=2560 --require dotenv/config --loader ts-node/esm --es-module-specifier-resolution=node src/index.ts",
    "start:worker": "node --max_old_space_size=2560 --require dotenv/config --loader ts-node/esm --es-module-specifier-resolution=node src/worker.ts",
    "start:redis": "docker run --rm --name redis -v `pwd`/.redisdata:/data -p 6379:6379 -it redis redis-server --save 60 1 --loglevel warning",
    "start:db": "docker run --rm --name db -e POSTGRES_USER=demo -e POSTGRES_PASSWORD=demo -e PGDATA=/var/lib/postgresql/data/pgdata -v `pwd`/.pgdata:/var/lib/postgresql/data -p 5432:5432 -it postgres:13",
    "shell": "node --max_old_space_size=2560 --require dotenv/config --loader ts-node/esm --es-module-specifier-resolution=node src/shell.ts",
    "shell:db": "docker exec -it db psql -U demo",
    "shell:score-viewer": "node --max_old_space_size=2560 --require dotenv/config --loader ts-node/esm --es-module-specifier-resolution=node src/score-viewer.ts",
    "setup:fixtures": "./setup-fixtures.sh",
    "pretest": "DATABASE_URL='postgresql://demo:demo@localhost:5432/demo-test' npx prisma migrate reset --force",
    "test": "NODE_ENV=test DATABASE_URL='postgresql://demo:demo@localhost:5432/demo-test' time node --loader ts-node/esm --es-module-specifier-resolution=node ../../node_modules/.bin/mocha tests/**/*.ts",
    "check": "tsc --watch --noEmit",
    "postinstall": "npx prisma generate && mkdir -p node_modules/@barz && rm -rf node_modules/@barz/server && ln -s ../../ node_modules/@barz/server",
    "prettier-check": "prettier --check '{src,tests}/**/*.{ts,tsx,scss}'",
    "prettier-format": "prettier --write '{src,tests}/**/*.{ts,tsx,scss}'",
    "format": "npm run prettier-format"
  },
  "keywords": [],
  "author": "",
  "license": "UNLICENSED",
  "devDependencies": {
    "@types/express": "^4.17.17",
    "@types/fluent-ffmpeg": "^2.1.21",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/lodash.debounce": "^4.0.7",
    "@types/mocha": "^10.0.1",
    "@types/morgan": "^1.9.4",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.1",
    "@types/which": "^3.0.0",
    "lodash.debounce": "^4.0.8",
    "mocha": "^10.2.0",
    "mockdate": "^3.0.5",
    "supertest": "^6.3.3"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.352.0",
    "@aws-sdk/s3-request-presigner": "^3.352.0",
    "@ngrok/ngrok": "^0.3.0",
    "@prisma/client": "^4.15.0",
    "@sentry/node": "^7.56.0",
    "async-cleanup": "^1.0.0",
    "body-parser": "^1.20.2",
    "bullmq": "^3.12.0",
    "date-fns": "^2.29.3",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "express-async-errors": "^3.1.1",
    "fluent-ffmpeg": "^2.1.2",
    "ioredis": "^5.3.2",
    "jsonwebtoken": "^9.0.0",
    "morgan": "^1.10.0",
    "node-fetch": "^3.3.2",
    "prisma": "^4.15.0",
    "pusher": "^5.1.3",
    "svix": "^1.5.0",
    "ts-node": "^10.9.1",
    "twilio": "^4.10.0",
    "uuid": "^9.0.0",
    "which": "^3.0.1",
    "xstate": "^4.37.1",
    "zod": "^3.22.2"
  }
}
